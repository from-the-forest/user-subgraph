version: 2.1

orbs:
  go: circleci/go@1.7.1
  docker: circleci/docker@2.2.0
  doctl: digitalocean/cli@0.1.1
  kubernetes: circleci/kubernetes@1.3.1
  node: circleci/node@5.1.0
  terraform: circleci/terraform@3.2.0

jobs:
  install:
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache

  secrets:
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      - run: |
          echo "PORT=4000" >> .env
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - .env
      - store_artifacts:
          path: .env

  schema-check:
    executor: node/default
    parameters:
      subgraph-name:
        type: string
      supergraph-name:
        type: string
      supergraph-variant:
        type: string
    steps:
      - checkout
      - run: |
          APOLLO_KEY=$APOLLO_KEY npx @apollo/rover subgraph check \
            << parameters.supergraph-name >>@<< parameters.supergraph-variant >> \
            --name << parameters.subgraph-name >> \
            --schema ./graph/schema/schema.graphql

  test:
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - go/test:
          packages: ./graph/...
          failfast: true

  lint:
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      - run: make lint

  deploy:
    docker:
      - image: "cimg/base:stable"
    parameters:
      cluster-name:
        type: string
    steps:
      - checkout
      - kubernetes/install
      - doctl/install
      - doctl/initialize:
          digitalocean-access-token: DO_TOKEN
      - run: doctl kubernetes cluster kubeconfig save << parameters.cluster-name >>
      - kubernetes/create-or-update-resource:
          resource-file-path: ./.k8s/namespace.yml
      - kubernetes/update-container-image:
          container-image-updates: user-subgraph=registry.digitalocean.com/from-the-forest/user-subgraph:$CIRCLE_SHA1
          resource-file-path: ./.k8s/deployment.yml
      - kubernetes/create-or-update-resource:
          resource-file-path: ./.k8s/service.yml
      - kubernetes/create-or-update-resource:
          resource-file-path: ./.k8s/issuer.yml
      - kubernetes/create-or-update-resource:
          resource-file-path: ./.k8s/ingress.yml

  schema-publish:
    executor: node/default
    parameters:
      subgraph-name:
        type: string
      supergraph-name:
        type: string
      supergraph-variant:
        type: string
    steps:
      - checkout
      # NOTE: it seems like rover doesn't support wildcards, and thus we can't have multiple gql files
      - run: |
          APOLLO_KEY=$APOLLO_KEY npx @apollo/rover subgraph publish \
            << parameters.supergraph-name >>@<< parameters.supergraph-variant >> \
            --name << parameters.subgraph-name >> \
            --schema ./graph/schema/schema.graphql

  integration:
    parameters:
      supergraph-name:
        type: string
      supergraph-variant:
        type: string
    environment:
      GRAPHQL_ENDPOINT: https://<< parameters.supergraph-variant >>--<< parameters.supergraph-name >>.apollographos.net/graphql
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - go/test:
          packages: ./tests/integration/...
          failfast: true

  load-test:
    parameters:
      supergraph-name:
        type: string
      supergraph-variant:
        type: string
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: Run Load Test
          command: |
            sudo apt-get update
            sudo apt-get install apache2-utils
            ab -k -c 20 -n 25 -T application/json \
              -p ./.circleci/load_test_query.json \
              https://<< parameters.supergraph-variant >>--<< parameters.supergraph-name >>.apollographos.net/graphql

workflows:
  version: 2
  primary:
    jobs:
      - install:
          filters:
            tags:
              only: /^v.*/
      - secrets:
          filters:
            tags:
              only: /^v.*/
      - schema-check:
          context: ftf
          subgraph-name: user-subgraph
          supergraph-name: cuffney-supergraph-vokiem
          supergraph-variant: main
          filters:
            tags:
              only: /^v.*/
      - test:
          requires:
            - install
            - secrets
          filters:
            tags:
              only: /^v.*/
      - docker/publish:
          context: ftf
          registry: registry.digitalocean.com/from-the-forest
          docker-username: DO_TOKEN
          docker-password: DO_TOKEN
          image: user-subgraph
          tag: $CIRCLE_SHA1
          # NOTE: multiple build args don't seem to work :(
          extra_build_args: "--build-arg MONGO_CONNECTION_STRING=$MONGO_CONNECTION_STRING"
          requires:
            - install
            - secrets
            - test
            - schema-check
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - terraform/fmt:
          context: ftf
          checkout: true
          path: ./infra
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - terraform/validate:
          context: ftf
          checkout: true
          path: ./infra
          requires:
            - terraform/fmt
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - terraform/plan:
          context: ftf
          checkout: true
          path: ./infra
          var: do_token=${DO_TOKEN},env=${CIRCLE_BRANCH}
          persist-workspace: true
          requires:
            - terraform/validate
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - terraform/apply:
          context: ftf
          attach-workspace: true
          path: ./infra
          var: do_token=${DO_TOKEN}
          requires:
            - docker/publish
            - terraform/plan
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy:
          context: ftf
          requires:
            - terraform/apply
          cluster-name: ftf-main-cluster
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - schema-publish:
          context: ftf
          requires:
            - deploy
          subgraph-name: user-subgraph
          supergraph-name: cuffney-supergraph-vokiem
          supergraph-variant: main
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - integration:
           context: ftf
           requires:
             - schema-publish
           supergraph-name: cuffney-supergraph-vokiem
           supergraph-variant: main
           filters:
             branches:
               ignore: /.*/
             tags:
               only: /^v.*/

#  nightly:
#    triggers:
#      - schedule:
#          cron: "0 0 * * *" # 7 or 8 pm EST depending on daylight savings time
#          filters:
#            branches:
#              only:
#                - main
#    jobs:
#      - load-test:
#          supergraph-name: cuffney-supergraph-vokiem
#          supergraph-variant: main
#      - integration:
#          context: ftf
#          supergraph-name: cuffney-supergraph-vokiem
#          supergraph-variant: main