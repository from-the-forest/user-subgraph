version: 2.1

orbs:
  node: circleci/node@5.0.3
  go: circleci/go@1.7.1
  aws-cli: circleci/aws-cli@3.1.4
  jq: circleci/jq@2.2.0
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  install:
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache

  secrets:
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      - run: |
          echo "PORT=4000" >> .env
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - .env
      - store_artifacts:
          path: .env

  test:
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - go/test:
          covermode: atomic
          failfast: true
          race: true

  lint:
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      - node/install
      - node/install-packages
      - run: make lint

  build:
    executor:
      name: go/default
      tag: 1.19.4
    steps:
      - checkout
      # get .env from secrets job.
      - attach_workspace:
          at: /home/circleci/project
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run: make build
      - store_artifacts:
          path: ./bin/user-subgraph

  image:
    executor: aws-ecr/default
    steps:
      - checkout
      # get .env from secrets job.
      - attach_workspace:
          at: /home/circleci/project
      - aws-ecr/build-and-push-image:
          repo: jcuffney/user-subgraph
          tag: latest
          create-repo: true

workflows:
  version: 2
  primary:
    jobs:
      - install
      - secrets
      - lint:
          requires:
            - install
            - secrets
      - test:
          requires:
            - install
            - secrets
      - build:
          requires:
            - install
            - secrets
      - image:
          context: cuffney
          requires:
            - build
            - test
            - lint
          filters:
            branches:
              only:
                - main
